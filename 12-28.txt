ROI与泛洪填充

ROI获取
face = src[20:250,50:250]---->起始位置：结束位置，起始位置：结束为止（第N行：第M个像素点）
mask = np.zeros([h+2，w+2],np.uint8) 遮罩--->opencv API规定+2，保证周围像素会被处理   
对彩色图片进行填充
 cv.floodFill(图片，遮罩，（开始填充位置，结束填充位置），（x,x,x）填充颜色，（x,x,x）最低填充像素，（x,x,x）最高填充像素，选择填充的方法）
		例如： cv.floodFill(img,mask,(30,30),(0,255,255),(100,100,100),(50,50,50),cv.FLODDFILL_FIXED_RANGE)
			意思是从 img中 30,30这个位置的像素点开始，对其周围       在像素值-100<x<像素值+100区间内的像素值 进行填充 

对二值图像 进行泛洪填充

需要注意
mask = np.one([402,402,1]),np.uint8) mask初始化为1
mask = [101:301,101:301]=0		需要填充的部分初始化为0
cv.FLOODFILL_MASK_ONLY 只对不为1的区域进行填充

-------------------------------------------------------以上，待练习-----------------------------------------------------------------------------------------


图像模糊
	卷积原理~ 处理像素点 达到模糊的效果           低通滤波（LPF），高通滤波（HPF）等。LPF 帮助我们去除噪音，模糊图像。HPF 帮助我们找到图像的边缘
		cv2.fiter2D 自定义模糊--实现锐化效果	 控制卷积核